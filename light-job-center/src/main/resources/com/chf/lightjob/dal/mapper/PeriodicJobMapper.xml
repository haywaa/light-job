<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chf.lightjob.dal.mapper.PeriodicJobMapper">
  <resultMap id="BaseResultMap" type="com.chf.lightjob.dal.entity.PeriodicJobDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="job_group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="job_desc" jdbcType="VARCHAR" property="jobDesc" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="alarm_email" jdbcType="VARCHAR" property="alarmEmail" />
    <result column="schedule_type" jdbcType="VARCHAR" property="scheduleType" />
    <result column="schedule_conf" jdbcType="VARCHAR" property="scheduleConf" />
    <result column="misfire_strategy" jdbcType="VARCHAR" property="misfireStrategy" />
    <result column="block_strategy" jdbcType="VARCHAR" property="blockStrategy" />
    <result column="executor_route_strategy" jdbcType="VARCHAR" property="executorRouteStrategy" />
    <result column="executor_handler" jdbcType="VARCHAR" property="executorHandler" />
    <result column="executor_param" jdbcType="VARCHAR" property="executorParam" />
    <result column="executor_timeout" jdbcType="INTEGER" property="executorTimeout" />
    <result column="executor_fail_retry_count" jdbcType="INTEGER" property="executorFailRetryCount" />
    <result column="child_jobid" jdbcType="VARCHAR" property="childJobid" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="trigger_last_time" jdbcType="BIGINT" property="triggerLastTime" />
    <result column="trigger_next_time" jdbcType="BIGINT" property="triggerNextTime" />
    <result column="schedule_fail_times" jdbcType="INTEGER" property="scheduleFailTimes" />
  </resultMap>

  <!-- 查询5秒内, SUBDATE -5s代表当前时间加5s -->
  <select id="selectNowScheduleJob" resultMap="BaseResultMap">
    SELECT * FROM periodic_job
    WHERE trigger_next_time &lt;= SUBDATE(now(),interval -#{preReadSecond} second)
    limit #{pagesize}
  </select>

  <insert id="addJob">
    INSERT INTO periodic_job(
       `job_group`
      ,`job_desc`
      ,`add_time`
      ,`update_time`
      ,`author`
      ,`alarm_email`
      ,`schedule_type`
      ,`schedule_conf`
      ,`misfire_strategy`
      ,`executor_route_strategy`
      ,`executor_handler`
      ,`executor_param`
      ,`executor_block_strategy`
      ,`executor_timeout`
      ,`executor_fail_retry_count`
      ,`child_jobid`
      ,`status`
      ,`trigger_last_time`
      ,`trigger_next_time`
      ,`schedule_fail_times`
    ) VALUES (
      #{jobGroup}
      ,#{jobDesc}
      ,#{addTime}
      ,#{updateTime}
      ,#{author}
      ,#{alarmEmail}
      ,#{scheduleType}
      ,#{scheduleConf}
      ,#{misfireStrategy}
      ,#{executorRouteStrategy}
      ,#{executorHandler}
      ,#{executorParam}
      ,#{executorBlockStrategy}
      ,#{executorTimeout}
      ,#{executorFailRetryCount}
      ,#{childJobid}
      ,#{status}
      ,#{triggerLastTime}
      ,#{triggerNextTime}
      ,#{scheduleFailTimes}
    )
  </insert>


  <insert id="batchUpdateJob">
    INSERT INTO periodic_job(
       `id`
      ,`status`
      ,`trigger_last_time`
      ,`trigger_next_time`
      ,`schedule_fail_times`
      ,`update_time`
      ,`job_group` ,`job_desc`, `schedule_type`, `misfire_strategy`, `executor_timeout`, `executor_fail_retry_count`
    ) VALUES
      <foreach close=")" collection="list" item="item" open="(" separator="),(">
        #{item.id}
        ,#{item.status}
        ,#{item.triggerLastTime}
        ,#{item.triggerNextTime}
        ,#{item.scheduleFailTimes}
        ,now()
        ,'' , '', '', '', 0, 0
      </foreach>
    ON DUPLICATE KEY UPDATE
      `status` = VALUES(`status`)
      , trigger_last_time = VALUES(trigger_last_time)
      , trigger_next_time = VALUES(trigger_next_time)
      , schedule_fail_times = VALUES(schedule_fail_times)
      , update_time = VALUES(update_time)
  </insert>

  <update id="updateById">
    UPDATE periodic_job SET
        `status` = #{status}
      , trigger_last_time = #{triggerLastTime}
      , trigger_next_time = #{triggerNextTime}
      , schedule_fail_times = #{scheduleFailTimes}
      , update_time = now()
    WHERE id = #{id}
  </update>

  <select id="queryAll" resultMap="BaseResultMap">
    SELECT * FROM periodic_job
  </select>

  <!-- 定时清理批量更新可能产生的异常数据 -->
  <delete id="clearInvalidData">
    DELETE FROM periodic_job WHERE job_group = ''
  </delete>
</mapper>